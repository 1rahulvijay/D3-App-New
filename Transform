import pandas as pd
import logging

logger = logging.getLogger(__name__)

def generate_sankey_data_from_excel(file_path):
    try:
        # Load Excel
        df = pd.read_excel(file_path)

        # Clean and validate
        df = df.dropna(subset=["Vertical", "request_type", "count"])
        df["Vertical"] = df["Vertical"].astype(str).str.strip()
        df["request_type"] = df["request_type"].astype(str).str.strip()
        df["count"] = df["count"].astype(int)

        # Unique node names
        verticals = df["Vertical"].unique().tolist()
        request_types = df["request_type"].unique().tolist()

        # Build node list
        nodes = [{"name": "ICMB ORG"}] + [{"name": v} for v in verticals] + [{"name": rt} for rt in request_types]
        node_indices = {node["name"]: idx for idx, node in enumerate(nodes)}

        links = []

        # ICMB ORG → Vertical (sum counts per vertical)
        org_to_vertical = df.groupby("Vertical")["count"].sum().to_dict()
        for vertical, total_count in org_to_vertical.items():
            links.append({
                "source": node_indices["ICMB ORG"],
                "target": node_indices[vertical],
                "value": total_count
            })

        # Vertical → Request Type
        for _, row in df.iterrows():
            links.append({
                "source": node_indices[row["Vertical"]],
                "target": node_indices[row["request_type"]],
                "value": row["count"]
            })

        # Metrics
        total_request_count = df["count"].sum()
        avg_flow_per_vertical = round(total_request_count / len(verticals), 2) if verticals else 0

        metrics = [
            {"label": "Total Request Count", "value": total_request_count},
            {"label": "Avg Flow per Vertical", "value": avg_flow_per_vertical}
        ]

        return {"nodes": nodes, "links": links, "metrics": metrics}

    except Exception as e:
        logger.error(f"Error generating Sankey data: {e}")
        return {"nodes": [], "links": [], "metrics": []}
